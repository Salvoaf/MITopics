- There are 12 million reasons why Marten Mickos isnt afraid that his rivals in the database software industry will ever overtake him 


-  Our secret is in the way we operate our culture ,  and Im convinced others cannot imitate that 


-  ,  Culture is too vague  word 


-  Mickos is referring to the fact that MySQL AB ,  the business he has built since 2001 ,  has committed itself to open-source innovation since its founding in 1995  with results successful enough that Sun Microsystems Inc 


-  acquired what is the worlds fastest-growing database vendor earlier this year for $1 billion 


-  Like such well-known proponents as Linux ,  the operating system ,  and Wikipedia ,  the online encyclopedia ,  MySQL shares its source code for free ,  giving programmers everywhere permission to debug ,  add features or otherwise modify the product before redistributing it 


-  ( MySQL  ,  whose high-profile customers include Facebook and Google ,  makes money by selling commercial licenses and by offering support and services 


-  )  MySQLs collaborative community now consists of 12 million coders ,  who typically receive compensation that amounts to  in todays dollars  nothing at all 


-  Mickos ,   native of Finland ,  works in the companys offices in Cupertino ,  California 


-  He first met the companys cofounders when they were all students  ( and avid poker players )  at the Helsinki University of Technology 


-  ,  Here Mickos ,  now  senior vice president at Sun ,  talks with Josh Hyatt for the MIT Sloan Management Review ,  freely sharing his ideas about why this Internet-age version of  barn-raising produces superior innovation ,  what murky motivations keep all those developers devoted and why Leonardo da Vinci is the father of the open-source movement 


-  ,  Why would  company like MySQL choose to give away the guts of its product  was it just  desperation move by its founders to differentiate it from its rivals? ,  MICKOS: Interestingly ,  the whole company was started by the founders writing the product code themselves ,  so its not like there was  big smorgasbord of contributions from many people 


-  They were thinking of  closed-source product 


-  Then one of the founders saw  presentation about open source and convinced the others that this was the way the world was going to go 


-  That was in the first year ,  1995 


-  ,  Did sharing the source code generate outside contributions right away? ,  MICKOS: You need  good user base before you start getting contributions 


-  Sometime in the late 1990s ,  people sent in new features or patches and other stuff 


-  We began to get contributions from the world 


-  But thats not the only way we innovate 


-  We also innovate in-house ,  we pay others to contribute to our product and we have customers who pay us to create the feature they are looking for 


-  Already Ive listed four different ways of innovating 


-  ,  Is there  limit to what outside innovation is good for? Is it safe to assume that people contributing that way are usually adapting existing products  rather than submitting plans for entirely new offerings? ,  MICKOS: The depth of the contributions varies by product and situation 


-  The deeper you go into the core of the database engine ,  the more difficult it is for somebody to contribute because it takes five years to learn 


-  If you build something on the outskirts of the kernel  some tool or function that you add on top of it  then that is much easier because theres less risk that you will mess up the whole product 


-  But something great can emerge out of many tiny-looking contributions 


-  Its analogous to how ,  in economic development ,  microloans can have such  huge impact  each entry is minimal ,  but when you multiply it by the number of people who are involved ,  it grows massive 


-  It starts getting  momentum of its own 


-  ,  What role can MySQL play in focusing all those efforts? If you put  specific problem out there ,  would the community solve it for you? ,  MICKOS: If we go out and pose  problem ,  chances are somebody will react favorably to it 


-  ,  What do you do about ineffective contributors who send in ideas that waste your time  or damage  product? How can you prevent your competitors from doing that? ,  MICKOS: No [competitor] has ever tried 


-  But of course we need to be protected against the risk of that anyway 


-  The fact that you send us some code doesnt mean that it goes into the product 


-  We test it ,  we make sure the documentation is there and that the coding standards are right ,  we test it and make sure that it fits our road map 


-  So if we found something that would be harmful to the product ,  or to the business ,  we would reject it 


-  We have\nrejected code ,  but mostly on the grounds of low quality ,  not because someone was trying to put  Trojan horse into our product 


-  ,  Given that you might reject the work that theyve done for free ,  how do you keep those outside innovators motivated to even try? ,  MICKOS: We sometimes use money 


-  Theres  part of our product called the JBDC driver ,   sizable piece of code ,  and  guy in the open-source community had developed it 


-  We went to him and said ,  Hey ,  would you like to join us as an employee and sell your code to us? He made money on it 


-  But that warranted payment 


-  For something small like  bug fix or  tweak here or there ,  we know what to do because we understand the motivation of the contributors 


-   reason is that they are contributing so that they will get ,  in return ,   better functioning product 


-  They are looking after their own business interests 


-   ,  and almost equally important ,  is their desire to build  reputation for themselves 


-  That gives them better job offers ,  and it gives them  feeling of usefulness in the world 


-  And they have an incentive to make contributions of high quality because they know that others will be examining it; its  Darwinian system and only the best innovations survive 


-  ,  How do you tell the world about an outsiders contribution  by naming  product after them? ,  MICKOS: In the product ,  they will be on  list of contributors 


-  Every year we announce the Community Person of the Year award 


-  This year we did it at our big conference ,  during my keynote ,  with  , 000 people in the audience 


-  In the audience ,  there were many people who wished that they had been selected 


-  Open-source people are not  bunch of Mahatma Gandhis trying to do good for everybody 


-  These are people with practical needs who are coming up with practical solutions 


-  They are trying to improve their own product or their own career or they are trying to prove to themselves how skilled they are 


-  ,  But only one person receives the award ,  and not everybody cares about having his or her name as part of  list that comes with  product; they may figure that their peers will already know 


-  Are there any other tricks to keeping programmers engaged? ,  MICKOS: We give them  functioning product back ,  and our cycle time is very fast 


-  They see the changed product quickly 


-  ,  What about the in-house innovation you do? Have you found the secret for building that function into the structure of  business? ,  MICKOS: We dont have an innovation team or  group or  chief innovation officer 


-  We do have five people whose only role is to engage with the community and activate them ,  listen to them and get them going 


-  This team has put up Web sites where they congregate and share their code with each other 


-  If you go there [http://forge 


-  We are dealing with such  huge number of people 


-  We have over 12 million people in our community 


-  We send our people places physically ,  too 


-  Theyll go to big open-source events to get the human touch 


-  ,  What do your MySQL representatives do when they go to these places  do they just walk in and announce that they are willing to pay nothing for any good ideas folks might like to give? ,  MICKOS: The popular thing now is to arrange an un-conference ,  and the idea is that it doesnt have  predefined agenda 


-  It looks unproductive ,  but its amazingly stimulating to these guys 


-  We have no budget ,  so you have to pay for your own travel and accommodations 


-  ,  Does that mean that you are actually getting people to pay to give MySQL their ideas? ,  MICKOS: They find the meetings very energizing 


-  ,  Does innovation always have to be that casual? Is that the only way it can happen? ,  MICKOS:  think so 


-   think that innovation happens in encounters with other people and also when you step over some boundary and you combine ideas that havent been combined before 


-  The original innovation moment always has the aspect of being chaotic 


-  ,  MySQL is  virtual company on  grand scale  with hundreds of employees working from their homes in more than two dozen countries 


-  Doesnt that hinder the innovation process? ,  MICKOS:  think it adds the spice to our discussions 


-  When we get together ,  there are so many dialects and accents that there isnt  norm ,  so you dont become normalized 


-  Lots of good ideas come out of the fact that we are each so different 


-  We have had to learn how to be innovative across distances ,  to get things going across multiple time zones 


-  We figured out that we needed to make sure that any one of us could draw something up instantly ,  and send it to everybody else 


-  Its as if we are sitting in one room together ,  with somebody taking notes on the wall while we are discussing them 


-  ,  Does collegiality improve innovation? ,  MICKOS: Its good for all of us if we can connect on  personal level 


-  When we get together  we used to do it once  year ,  but it has become harder now that we are over 400 employees  we need to do  full day of being social 


-  Its as if weve piled up those 15-minute breaks that people in offices use to be social 


-  We leave knowing each others body language and feeling more connected 


-  ,  But you also rely on contributors who are disconnected in that sense ,  and who may feel free to behave any way they want 


-  How do you control their online conduct? ,  MICKOS: It is true that people are ruder when they are anonymous on e-mail 


-  External people can be overly critical and very negative 


-  When you turn it around like that ,  they either go silent or they start talking 


-  In fact ,  they can become your most passionate supporters 


-  Never underestimate the hidden positive value in somebody who is upset 


-  ,  But not everybody out there is  secret admirer  or just waiting for the right moment to express their affections 


-  Sometimes we dont get anything positive out of it 


-  In that case ,  we must trust that the world will see what is happening and that its the same guy complaining again 


-  ,  Arent you worried that one of those anonymous people will piggyback on your code and start  business that is aimed at crushing you? ,  MICKOS: Let them try 


-  ,  Why is that? ,  MICKOS: If 60-year-olds go to  teenage disco to learn how to dance ,  they wont be able to dress like the youth do ,  or move like they do or enjoy it like they do 


-   think you should always be open to learning from everybody ,  but you must build your own DNA 


-  ,  Why is it that  growing number of companies are enamored with building their own DNA out in the open? ,  MICKOS: Some people believe that open sourcing is  panacea 


-  They say ,  Well open-source this and something will magically happen on its own 


-  Thats just completely wrong 


-  The only way to get engagement from  community is to engage in that community yourself 


-  Its not like there is some saint out there waiting for you to open-source so he or she can contribute 


-   lot of software created by open source has no commercial value 


-  ,  Is that why open sourcing seems so often linked with nonprofits like Apache ,  Linux and Mozilla? ,  MICKOS:  wouldnt be surprised if the proprietary companies are trying to portray it that way to reduce the competitive pressure on them 


-  They tell their customers ,  Those guys are nonprofit communists ,  so dont touch them 


-  The activity level of the community can help  small player become  threat to established companies without having to invest millions and millions of dollars to get brand recognition 


-  People start writing blogs or they write books about it and they help others get used to your product 


-  ,  Are we all getting too used to open sourcing? Are you concerned about it becoming  fad that everybody gets sick of? ,  MICKOS: This idea is not new 


-   dont think innovation has changed in thousands of years 


-  The difference between what he did and what we do isnt in the openness ,  its in the reach 


