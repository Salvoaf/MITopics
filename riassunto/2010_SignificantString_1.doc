-  Google takes the judgments made by millions of people as they create links to web pages and harnesses that collective knowledge of the entire web to produce amazingly intelligent answers to the questions we type into the Google search bar 


-  Anyone who wants to can change almost anything ,  and decisions about what changes to keep are made by  loose consensus of those who care 


-  ,  In Threadless ,  anyone who wants to can design  T-shirt ,  submit that design to  weekly contest and then rate their favorite designs 


-  More than inspiring ,  even; theyve come to look like management wish fulfillment  evidence that  committed embrace of collective intelligence is all it takes for  company to magically divine market desires ,  create exactly whats needed to satisfy them and do it all at little or no cost 


-  ,  In fact ,  its possible that collective intelligence has come to seem just  little bit too much like magic in the view of many managers 


-  If collective intelligence is such  powerful way for organizations to get things done in this age of crowd wisdom and wikinomics ,  why dont more businesses use it? ,  The answer ,  we think ,  is that they dont know how 


-  To unlock the potential of collective intelligence ,  managers instead need  deeper understanding of how these systems work 


-  ,  In this article well offer  new framework for understanding those systems  and more important ,  for understanding how to build them 


-  You have just written the heart of  rudimentary operating system for personal computers ,  and you are considering what to do next 


-  You dont know it yet ,  but the decisions you are about to make will lead to the creation of  community of thousands of volunteer programmers all over the world who will develop something called Linux ,  one of the most important computer operating systems of the early 21st century 


-  Of course ,  Linus Torvalds didnt really have this knowledge ,  and the success of his decisions may have surprised him 


-  But if you could use the concepts from this article to consciously design the kind of open source community that Torvalds created ,  how would you do it? ,  First ,  you would ask yourself: What is the main activity  want to be done? As well see below ,  there are two basic genes to answer this question  ( Create and Decide )  ,  and in this case you would want to Create programming code for  new computer operating system 


-  Instead of assigning particular people to do different parts of the software development as in  traditional Hierarchy ,  you decide to make your software freely available on the Internet and let anyone who wants to add to or change any parts of the software they want 


-  ,  Why would you want to consider the Crowd option? In the case of Linus Torvalds ,  you simply dont have another choice: You dont have the time to do it yourself or the money to hire others 


-  At the same time ,  you correctly assess that there are enough skilled programmers around the world who would be capable of collectively doing it ,  if properly motivated 


-  ,  This ,  of course ,  immediately leads to the next question: Why will people do this? Since you cant afford to use what well call the Money gene ,  youll need to appeal instead to other motivations ,  to what well call the Love and Glory genes 


-  For instance ,  Torvalds used  playful tone in many of his e-mail messages ,  appealing to peoples desire to have fun writing this software as  kind of hobby 


-  ,  Finally ,  you need to ask the question: How will people do this? In answering this question ,  as the Linux creator ,  you realize that the pieces of software that people are going to be creating are not independent of each other 


-  ,  And now you realize that there is  very important omission in your thinking so far 


-  If anyone who wants to can write different pieces of the software ,  how do you know that  given piece  from someone you dont even know  is of good enough quality? And just as important ,  how do you make sure that all the different pieces will work together properly? ,  The Collaboration gene usually needs to be combined with at least one Decide gene to choose pieces with these characteristics 


-  In particular ,  since you want the whole community to focus on one primary version of the software  ( and not divide its efforts across many different versions )  ,  you will need  Group Decision gene ,  where everyone in the group is bound by the same decisions about what is and is not included 


-  ,  You briefly consider various subtypes of the Group Decision gene such as Voting  ( everyone in the community could vote on which pieces to use )  or Consensus  ( everyone could discuss until they all agreed on which pieces to use )  ,  but you decide to use  simple type of decision making that is common in traditional organizations and that youre pretty sure will work here: the Hierarchy gene 


-  In other words ,  youll make these decisions yourself or delegate them to other people you trust 


-  ,  The Genes of Collective Intelligence  ( and How to Build  Genome of Your Own )  ,  To use the genome approach systematically  so that you can build exactly the kind of CI system that will accomplish your desired job  requires  comprehensive classification of the different types of genes 


-  In this article well focus on the 16 principal genes  ( there are others emerging ,  and some subtypes of genes ,  too )  and the factors involved in selecting them for  genome 


-  In this gene ,  the actors in the system generate something new   piece of software code ,   blog entry ,   T-shirt design 


-  In this gene ,  the actors evaluate and select alternatives  deciding whether  new module should be included in the next release of Linux ,  selecting which T-shirt design to manufacture ,  deciding whether to delete  Wikipedia article 


-  And Decide genes usually need  Create gene to generate the choices being considered 


-  For example ,  as we saw ,  anyone who wants to can submit  module for possible inclusion in Linux 


-  In fact ,  all of the examples we studied include at least one instance of the Crowd gene  at least one task where anyone who chooses to can participate 


-  ,  How to choose between Hierarchies and Crowds The most important reason to use the Crowd gene is to tap into  much larger pool of people than would otherwise be possible 


-  In prior decades ,  for instance ,  when video recording and editing equipment was so expensive that only  few large corporations could afford it ,  it made sense for the creation of movies and television shows to be managed hierarchically by film studios and TV networks 


-  ,  By tapping  large crowd ,  instead of just assigning  task to  few preselected people ,  organizations can often realize various kinds of advantages 


-  In open source software  ( like Linux )  ,  many people believe the quality of the results is higher because many eyeballs have examined the code more thoroughly 


-  And finally ,  by finding and giving  sense of control to people who are most enthusiastic about artistic T-shirts ,  Threadless appears to harness more of peoples motivation and energy than the Hierarchy gene would 


-  For example ,  it must also be possible to divide the activity into pieces that can be performed satisfactorily by different members of the crowd 


-  In this sense ,  you can think of the traditional Hierarchy gene as the default gene ,  the one to use when you cant figure out how to get  Crowd gene to work 


-  ,  WHY? Closely related to the Who question is Why? Why do people take part in the activity? What motivates them to participate? What incentives are at work? ,  It is impossible to do justice in  brief summary to all that is known about human motivation 


-  As  simplified overview of the possibilities ,  however ,  three principal Why genes can cover the high-level motivations that lead people to participate in collective intelligence systems: ,  Money 


-  Sometimes people receive direct payments ,  like  salary ,  and sometimes they hope that participating in an activity will increase the likelihood of their earning future payments ,  as in cases where people perform  task to enhance their professional reputation or improve their skills 


-  The Love gene can take several forms; people can be motivated by their intrinsic enjoyment of an activity ,  by the opportunities it provides to socialize with others or because it makes them feel they are contributing to  cause larger than themselves 


-  Studies of Wikipedia have shown that its participants are motivated by all three of these variants of the Love gene 


-  The programmers in many open source software communities ,  for example ,  are motivated by the desire to be recognized by peers for their contributions 


-  ,  How to choose among Why genes Of course ,  these three Why genes are not novel; such motivational levers are used in all organizations 


-  Amazon doesnt pay for the book reviews it runs; users write them to gain recognition or because they simply enjoy doing so 


-  But if there are specific goals in mind ,  the Crowd can sometimes be influenced to achieve them faster by providing Money or Glory to the members of the Crowd who go in the desired direction 


-  ,  Although the selection and combination of motivational genes is  very complex matter ,  it is also an extremely important one 


-  While we dont know of any systematic studies on this issue ,  we suspect that getting the motivational factors wrong is the single greatest factor behind failed efforts to launch new collective intelligence systems 


-  Also ,  for  contest to work ,  the Why genes ,  such as Money or Glory ,  must be powerful enough to motivate contestants to enter with no guarantee of reward 


-  The Collaboration gene occurs when members of  Crowd work together to create something and important dependencies exist between their contributions 


-  First ,   Collection is impossible because there are no satisfactory ways of dividing the large activity into independent pieces 


-  Second ,  there are satisfactory ways of managing the dependencies between the individual pieces contributed by members of the crowd 


-  In other instances ,  such as Digg ,  the decision relates to generating  common rank-ordering of the contributed items 


-  In yet other instances ,  such as prediction markets ,  the decision relates to aggregating individual inputs to form  publicly visible estimate of  quantity 


-  ,  If the group is small enough and like-minded enough to reach consensus in  reasonable amount of time ,  then Consensus may be the most desirable method 


-  For example ,  in iStockphoto ,  photographers post their photos for sale on  website ,  and editors and others buy the rights to use photos they want 


-  On eBay ,  sellers post items they want to sell ,  and buyers bid for them 


-  In Social Networks ,  members of  crowd form  network of relationships that ,  depending on the context ,  might translate into levels of trust ,  similarity of taste and viewpoints or other common characteristics that might cause individuals to feel an affinity for one another 


- coms trust networks ,  Amazon 


-  ,  When Individual Decisions are needed ,  Markets are especially useful when money  ( or similar incentives )  are required to motivate people to provide the necessary effort or other resources 


-  Social Networks are especially useful when individuals dont need to be paid ,  and they find information about the opinions of others useful in making their own choices 


-  But we believe the genetic framework described here provides  useful start 


-  ,  With this framework ,  managers can do more than just look at examples and hope for inspiration 


-  Instead ,  for each key activity to be performed ,  they can systematically consider many possible combinations of answers to questions about What ,  Who ,  Why and How 


